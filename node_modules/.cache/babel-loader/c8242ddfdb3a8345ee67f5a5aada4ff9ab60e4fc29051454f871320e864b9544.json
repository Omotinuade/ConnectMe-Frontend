{"ast":null,"code":"import { axiosInstance } from \".\";\nexport const LoginUser = async user => {\n  try {\n    const response = await axiosInstance.post(\"/api/users/login\", user);\n    console.log(\"=======================\" + response.data);\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n_c = LoginUser;\nexport const RegisterUser = async user => {\n  try {\n    const response = await axiosInstance.post(\"/api/users/register\", user);\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n_c2 = RegisterUser;\nexport const GetCurrentUser = async () => {\n  await axiosInstance.get(\"/api/users/get-current-user\").then(response => {\n    console.log(response.data);\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n    return err.response.data;\n  });\n};\n_c3 = GetCurrentUser;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginUser\");\n$RefreshReg$(_c2, \"RegisterUser\");\n$RefreshReg$(_c3, \"GetCurrentUser\");","map":{"version":3,"names":["axiosInstance","LoginUser","user","response","post","console","log","data","error","_c","RegisterUser","_c2","GetCurrentUser","get","then","catch","err","_c3","$RefreshReg$"],"sources":["C:/Users/Tinuade/Desktop/Connectify/Connectify/client/src/apicalls/users.js"],"sourcesContent":["import { axiosInstance } from \".\";\r\n\r\nexport const LoginUser = async (user) => {\r\n\ttry {\r\n\t\tconst response = await axiosInstance.post(\"/api/users/login\", user);\r\n\t\tconsole.log(\"=======================\" + response.data);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\treturn error.response.data;\r\n\t}\r\n};\r\n\r\nexport const RegisterUser = async (user) => {\r\n\ttry {\r\n\t\tconst response = await axiosInstance.post(\"/api/users/register\", user);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\treturn error.response.data;\r\n\t}\r\n};\r\n\r\nexport const GetCurrentUser = async () => {\r\n\tawait axiosInstance\r\n\t\t.get(\"/api/users/get-current-user\")\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn err.response.data;\r\n\t\t});\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,GAAG;AAEjC,OAAO,MAAMC,SAAS,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,IAAI,CAAC,kBAAkB,EAAEF,IAAI,CAAC;IACnEG,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGH,QAAQ,CAACI,IAAI,CAAC;IACtD,OAAOJ,QAAQ,CAACI,IAAI;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACf,OAAOA,KAAK,CAACL,QAAQ,CAACI,IAAI;EAC3B;AACD,CAAC;AAACE,EAAA,GARWR,SAAS;AAUtB,OAAO,MAAMS,YAAY,GAAG,MAAOR,IAAI,IAAK;EAC3C,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,IAAI,CAAC,qBAAqB,EAAEF,IAAI,CAAC;IACtE,OAAOC,QAAQ,CAACI,IAAI;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACf,OAAOA,KAAK,CAACL,QAAQ,CAACI,IAAI;EAC3B;AACD,CAAC;AAACI,GAAA,GAPWD,YAAY;AASzB,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMZ,aAAa,CACjBa,GAAG,CAAC,6BAA6B,CAAC,CAClCC,IAAI,CAAEX,QAAQ,IAAK;IACnBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACrB,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAK;IACfX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;IAChB,OAAOA,GAAG,CAACb,QAAQ,CAACI,IAAI;EACzB,CAAC,CAAC;AACJ,CAAC;AAACU,GAAA,GAXWL,cAAc;AAAA,IAAAH,EAAA,EAAAE,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}